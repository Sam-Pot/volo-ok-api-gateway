syntax = "proto3";
package ticketBookingManager;

service BookingService {
  rpc saveOrUpdate(Booking) returns (Booking) {};
  rpc delete (BookingDto) returns (Booking) {};
  rpc find(PaginateQuery) returns (PaginatedBookings) {};
  rpc findOne(BookingDto) returns (Booking) {};
}

service TicketService {
  rpc saveOrUpdate(Ticket) returns (Ticket) {};
  rpc generateTicket(TicketId) returns (EmailDto) {};
  rpc findOne(TicketDto) returns (Ticket) {};
  rpc find(PaginateQuery) returns (PaginatedTickets) {};
  rpc getStatistics(UserId) returns (PaginatedFidelityStatistics) {};
}

message Booking {
  string id = 1;
  bool isOneWayTrip = 2;
  BookingState state = 3;
  uint64 expirationDate = 4;
  string flightId = 5;
  string userId = 6;
  float price = 7;
  repeated Ticket tickets = 8;
}

message Ticket {
  string id = 1;
  string passengerName = 2;
  string passengerSurname = 3;
  string baggageCategory = 4;
  string seat = 5;
  string fareId = 6;
  string from = 7;
  string to = 8;
  string customerCode = 9;
  float price = 10;
  uint32 generatedPoints = 11;
  uint32 usedPoints = 12;
}

enum BookingState {
  OPEN = 0;
  CONFIRMED = 1;
  EXPIRED = 2;
}

message BookingDto {
  string bookingId = 1;
  string userId = 2;
}

message TicketId { string id = 1; }

message TicketDto {
  string ticketId = 1;
  string userId = 2;
}

message PaginateQuery { string query = 1; }

message PaginatedBookings {
  uint32 elementsNumber = 1;
  repeated Booking bookings = 2;
}

message PaginatedTickets {
  uint32 elementsNumber = 1;
  repeated Ticket tickets = 2;
}

message UserId { string id = 1; }

message FidelityStatistics {
  string ticketId = 1;
  uint64 date = 2;
  string from = 3;
  string to = 4;
  uint32 generatedPoints = 5;
  uint32 usedPoints = 6;
}

message PaginatedFidelityStatistics {
  uint32 elementsNumber = 1;
  repeated FidelityStatistics statistics = 2;
}

message EmailDto {
  string to = 1;
  string subject = 2;
  string text = 3;
  string html = 4;
}